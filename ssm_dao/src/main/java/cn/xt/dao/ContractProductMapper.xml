<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xt.dao.ContractProductMapper">
  <resultMap id="BaseResultMap" type="cn.xt.domain.ContractProduct">
    <id column="CONTRACT_PRODUCT_ID" jdbcType="VARCHAR" property="contractProductId" />
    <result column="CONTRACT_ID" jdbcType="VARCHAR" property="contractId" />
    <result column="FACTORY_ID" jdbcType="VARCHAR" property="factoryId" />
    <result column="FACTORY_NAME" jdbcType="VARCHAR" property="factoryName" />
    <result column="PRODUCT_NO" jdbcType="VARCHAR" property="productNo" />
    <result column="PRODUCT_IMAGE" jdbcType="VARCHAR" property="productImage" />
    <result column="PRODUCT_DESC" jdbcType="VARCHAR" property="productDesc" />
    <result column="LOADING_RATE" jdbcType="VARCHAR" property="loadingRate" />
    <result column="BOX_NUM" jdbcType="INTEGER" property="boxNum" />
    <result column="PACKING_UNIT" jdbcType="VARCHAR" property="packingUnit" />
    <result column="CNUMBER" jdbcType="INTEGER" property="cnumber" />
    <result column="OUT_NUMBER" jdbcType="INTEGER" property="outNumber" />
    <result column="FINISHED" jdbcType="INTEGER" property="finished" />
    <result column="PRODUCT_REQUEST" jdbcType="VARCHAR" property="productRequest" />
    <result column="PRICE" jdbcType="DECIMAL" property="price" />
    <result column="AMOUNT" jdbcType="DECIMAL" property="amount" />
    <result column="ORDER_NO" jdbcType="INTEGER" property="orderNo" />
  </resultMap>

    <resultMap id="withBaseResultMap" type="cn.xt.domain.ContractProduct">
      <id column="CONTRACT_PRODUCT_ID" jdbcType="VARCHAR" property="contractProductId" />
      <result column="CONTRACT_ID" jdbcType="VARCHAR" property="contractId" />
      <result column="FACTORY_ID" jdbcType="VARCHAR" property="factoryId" />
      <result column="FACTORY_NAME" jdbcType="VARCHAR" property="factoryName" />
      <result column="PRODUCT_NO" jdbcType="VARCHAR" property="productNo" />
      <result column="PRODUCT_IMAGE" jdbcType="VARCHAR" property="productImage" />
      <result column="PRODUCT_DESC" jdbcType="VARCHAR" property="productDesc" />
      <result column="LOADING_RATE" jdbcType="VARCHAR" property="loadingRate" />
      <result column="BOX_NUM" jdbcType="INTEGER" property="boxNum" />
      <result column="PACKING_UNIT" jdbcType="VARCHAR" property="packingUnit" />
      <result column="CNUMBER" jdbcType="INTEGER" property="cnumber" />
      <result column="OUT_NUMBER" jdbcType="INTEGER" property="outNumber" />
      <result column="FINISHED" jdbcType="INTEGER" property="finished" />
      <result column="PRODUCT_REQUEST" jdbcType="VARCHAR" property="productRequest" />
      <result column="PRICE" jdbcType="DECIMAL" property="price" />
      <result column="AMOUNT" jdbcType="DECIMAL" property="amount" />
      <result column="ORDER_NO" jdbcType="INTEGER" property="orderNo" />
      <collection property="extCproducts" ofType="cn.xt.domain.ExtCproduct">
        <id column="EXT_CPRODUCT_IDE" property="extCproductId"></id>
        <result column="FACTORY_NAMEE" property="factoryName"></result>
        <result column="PRODUCT_NOE" property="productNo"></result>
        <result column="PACKING_UNITE" property="packingUnit"></result>
        <result column="CNUMBERE" property="cnumber"></result>
        <result column="PRICEE" property="price"></result>
        <result column="AMOUNTE" property="amount"></result>
      </collection>
    </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    CONTRACT_PRODUCT_ID, CONTRACT_ID, FACTORY_ID, FACTORY_NAME, PRODUCT_NO, PRODUCT_IMAGE, 
    PRODUCT_DESC, LOADING_RATE, BOX_NUM, PACKING_UNIT, CNUMBER, OUT_NUMBER, FINISHED, 
    PRODUCT_REQUEST, PRICE, AMOUNT, ORDER_NO
  </sql>
  <sql id="withBase_Column_List">
    c.CONTRACT_PRODUCT_ID,  c.CONTRACT_ID, c.FACTORY_ID, c.FACTORY_NAME, c.PRODUCT_NO, c.PRODUCT_IMAGE,
    c.PRODUCT_DESC, c.LOADING_RATE, c.BOX_NUM, c.PACKING_UNIT, c.CNUMBER, c.OUT_NUMBER, c.FINISHED,
    c.PRODUCT_REQUEST, c.PRICE, c.AMOUNT, c.ORDER_NO,e.EXT_CPRODUCT_ID EXT_CPRODUCT_IDE, e.FACTORY_NAME FACTORY_NAMEE,
    e.PRODUCT_NO PRODUCT_NOE, e.PACKING_UNIT PACKING_UNITE, e.CNUMBER CNUMBERE, e.PRICE PRICEE, e.AMOUNT AMOUNTE
  </sql>
  <!--  /*查询厂家名称，附件*/
    List<ContractProduct> selectByExamplewithcp(@Param("contractProductId") String contractProductId);-->
  <select id="selectByExamplewithcp" resultMap="withBaseResultMap">
    select
    <include refid="withBase_Column_List" />
     FROM CONTRACT_PRODUCT_C c LEFT JOIN ext_cproduct_c e ON c.CONTRACT_PRODUCT_ID=e.CONTRACT_PRODUCT_ID
    WHERE c.CONTRACT_PRODUCT_ID in(select CONTRACT_PRODUCT_ID FROM CONTRACT_PRODUCT_C where  CONTRACT_ID=#{contractId})
  </select>
  <!--/*根据货物id查询附件信息 子查询*/
    ContractProduct selectByPrimaryKeywithcp(String contractProductId);-->
  <select id="selectByPrimaryKeywithcp" resultMap="withBaseResultMap">
    select
    <include refid="withBase_Column_List" />
    FROM CONTRACT_PRODUCT_C c LEFT JOIN ext_cproduct_c e ON c.CONTRACT_PRODUCT_ID=e.CONTRACT_PRODUCT_ID
    WHERE e.EXT_CPRODUCT_ID = (select EXT_CPRODUCT_ID FROM ext_cproduct_c where  CONTRACT_PRODUCT_ID=#{contractProductId,jdbcType=VARCHAR})
  </select>

  <!-- /*根据货物id查询附件id信息*/
    ContractProduct selectByPrimaryKeywithExport(@Param("contractProductId") String contractProductId);-->
  <select id="selectByPrimaryKeywithExport" resultMap="withBaseResultMap">
    select
    <include refid="withBase_Column_List" />
    FROM CONTRACT_PRODUCT_C c LEFT JOIN ext_cproduct_c e ON c.CONTRACT_PRODUCT_ID=e.CONTRACT_PRODUCT_ID
    where c.CONTRACT_PRODUCT_ID = #{contractProductId,jdbcType=VARCHAR}
  </select>
  <select id="selectByExample" parameterType="cn.xt.domain.ContractProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from contract_product_c
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from contract_product_c
    where CONTRACT_PRODUCT_ID = #{contractProductId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from contract_product_c
    where CONTRACT_PRODUCT_ID = #{contractProductId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xt.domain.ContractProductExample">
    delete from contract_product_c
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.xt.domain.ContractProduct">
    insert into contract_product_c (CONTRACT_PRODUCT_ID, CONTRACT_ID, FACTORY_ID, 
      FACTORY_NAME, PRODUCT_NO, PRODUCT_IMAGE, 
      PRODUCT_DESC, LOADING_RATE, BOX_NUM, 
      PACKING_UNIT, CNUMBER, OUT_NUMBER, 
      FINISHED, PRODUCT_REQUEST, PRICE, 
      AMOUNT, ORDER_NO)
    values (#{contractProductId,jdbcType=VARCHAR}, #{contractId,jdbcType=VARCHAR}, #{factoryId,jdbcType=VARCHAR}, 
      #{factoryName,jdbcType=VARCHAR}, #{productNo,jdbcType=VARCHAR}, #{productImage,jdbcType=VARCHAR}, 
      #{productDesc,jdbcType=VARCHAR}, #{loadingRate,jdbcType=VARCHAR}, #{boxNum,jdbcType=INTEGER}, 
      #{packingUnit,jdbcType=VARCHAR}, #{cnumber,jdbcType=INTEGER}, #{outNumber,jdbcType=INTEGER}, 
      #{finished,jdbcType=INTEGER}, #{productRequest,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{amount,jdbcType=DECIMAL}, #{orderNo,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.xt.domain.ContractProduct">
    insert into contract_product_c
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="contractProductId != null">
        CONTRACT_PRODUCT_ID,
      </if>
      <if test="contractId != null">
        CONTRACT_ID,
      </if>
      <if test="factoryId != null">
        FACTORY_ID,
      </if>
      <if test="factoryName != null">
        FACTORY_NAME,
      </if>
      <if test="productNo != null">
        PRODUCT_NO,
      </if>
      <if test="productImage != null">
        PRODUCT_IMAGE,
      </if>
      <if test="productDesc != null">
        PRODUCT_DESC,
      </if>
      <if test="loadingRate != null">
        LOADING_RATE,
      </if>
      <if test="boxNum != null">
        BOX_NUM,
      </if>
      <if test="packingUnit != null">
        PACKING_UNIT,
      </if>
      <if test="cnumber != null">
        CNUMBER,
      </if>
      <if test="outNumber != null">
        OUT_NUMBER,
      </if>
      <if test="finished != null">
        FINISHED,
      </if>
      <if test="productRequest != null">
        PRODUCT_REQUEST,
      </if>
      <if test="price != null">
        PRICE,
      </if>
      <if test="amount != null">
        AMOUNT,
      </if>
      <if test="orderNo != null">
        ORDER_NO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="contractProductId != null">
        #{contractProductId,jdbcType=VARCHAR},
      </if>
      <if test="contractId != null">
        #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="factoryId != null">
        #{factoryId,jdbcType=VARCHAR},
      </if>
      <if test="factoryName != null">
        #{factoryName,jdbcType=VARCHAR},
      </if>
      <if test="productNo != null">
        #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productImage != null">
        #{productImage,jdbcType=VARCHAR},
      </if>
      <if test="productDesc != null">
        #{productDesc,jdbcType=VARCHAR},
      </if>
      <if test="loadingRate != null">
        #{loadingRate,jdbcType=VARCHAR},
      </if>
      <if test="boxNum != null">
        #{boxNum,jdbcType=INTEGER},
      </if>
      <if test="packingUnit != null">
        #{packingUnit,jdbcType=VARCHAR},
      </if>
      <if test="cnumber != null">
        #{cnumber,jdbcType=INTEGER},
      </if>
      <if test="outNumber != null">
        #{outNumber,jdbcType=INTEGER},
      </if>
      <if test="finished != null">
        #{finished,jdbcType=INTEGER},
      </if>
      <if test="productRequest != null">
        #{productRequest,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xt.domain.ContractProductExample" resultType="java.lang.Long">
    select count(*) from contract_product_c
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update contract_product_c
    <set>
      <if test="record.contractProductId != null">
        CONTRACT_PRODUCT_ID = #{record.contractProductId,jdbcType=VARCHAR},
      </if>
      <if test="record.contractId != null">
        CONTRACT_ID = #{record.contractId,jdbcType=VARCHAR},
      </if>
      <if test="record.factoryId != null">
        FACTORY_ID = #{record.factoryId,jdbcType=VARCHAR},
      </if>
      <if test="record.factoryName != null">
        FACTORY_NAME = #{record.factoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.productNo != null">
        PRODUCT_NO = #{record.productNo,jdbcType=VARCHAR},
      </if>
      <if test="record.productImage != null">
        PRODUCT_IMAGE = #{record.productImage,jdbcType=VARCHAR},
      </if>
      <if test="record.productDesc != null">
        PRODUCT_DESC = #{record.productDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.loadingRate != null">
        LOADING_RATE = #{record.loadingRate,jdbcType=VARCHAR},
      </if>
      <if test="record.boxNum != null">
        BOX_NUM = #{record.boxNum,jdbcType=INTEGER},
      </if>
      <if test="record.packingUnit != null">
        PACKING_UNIT = #{record.packingUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.cnumber != null">
        CNUMBER = #{record.cnumber,jdbcType=INTEGER},
      </if>
      <if test="record.outNumber != null">
        OUT_NUMBER = #{record.outNumber,jdbcType=INTEGER},
      </if>
      <if test="record.finished != null">
        FINISHED = #{record.finished,jdbcType=INTEGER},
      </if>
      <if test="record.productRequest != null">
        PRODUCT_REQUEST = #{record.productRequest,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        PRICE = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.amount != null">
        AMOUNT = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.orderNo != null">
        ORDER_NO = #{record.orderNo,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update contract_product_c
    set CONTRACT_PRODUCT_ID = #{record.contractProductId,jdbcType=VARCHAR},
      CONTRACT_ID = #{record.contractId,jdbcType=VARCHAR},
      FACTORY_ID = #{record.factoryId,jdbcType=VARCHAR},
      FACTORY_NAME = #{record.factoryName,jdbcType=VARCHAR},
      PRODUCT_NO = #{record.productNo,jdbcType=VARCHAR},
      PRODUCT_IMAGE = #{record.productImage,jdbcType=VARCHAR},
      PRODUCT_DESC = #{record.productDesc,jdbcType=VARCHAR},
      LOADING_RATE = #{record.loadingRate,jdbcType=VARCHAR},
      BOX_NUM = #{record.boxNum,jdbcType=INTEGER},
      PACKING_UNIT = #{record.packingUnit,jdbcType=VARCHAR},
      CNUMBER = #{record.cnumber,jdbcType=INTEGER},
      OUT_NUMBER = #{record.outNumber,jdbcType=INTEGER},
      FINISHED = #{record.finished,jdbcType=INTEGER},
      PRODUCT_REQUEST = #{record.productRequest,jdbcType=VARCHAR},
      PRICE = #{record.price,jdbcType=DECIMAL},
      AMOUNT = #{record.amount,jdbcType=DECIMAL},
      ORDER_NO = #{record.orderNo,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xt.domain.ContractProduct">
    update contract_product_c
    <set>
      <if test="contractId != null">
        CONTRACT_ID = #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="factoryId != null">
        FACTORY_ID = #{factoryId,jdbcType=VARCHAR},
      </if>
      <if test="factoryName != null">
        FACTORY_NAME = #{factoryName,jdbcType=VARCHAR},
      </if>
      <if test="productNo != null">
        PRODUCT_NO = #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productImage != null">
        PRODUCT_IMAGE = #{productImage,jdbcType=VARCHAR},
      </if>
      <if test="productDesc != null">
        PRODUCT_DESC = #{productDesc,jdbcType=VARCHAR},
      </if>
      <if test="loadingRate != null">
        LOADING_RATE = #{loadingRate,jdbcType=VARCHAR},
      </if>
      <if test="boxNum != null">
        BOX_NUM = #{boxNum,jdbcType=INTEGER},
      </if>
      <if test="packingUnit != null">
        PACKING_UNIT = #{packingUnit,jdbcType=VARCHAR},
      </if>
      <if test="cnumber != null">
        CNUMBER = #{cnumber,jdbcType=INTEGER},
      </if>
      <if test="outNumber != null">
        OUT_NUMBER = #{outNumber,jdbcType=INTEGER},
      </if>
      <if test="finished != null">
        FINISHED = #{finished,jdbcType=INTEGER},
      </if>
      <if test="productRequest != null">
        PRODUCT_REQUEST = #{productRequest,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        PRICE = #{price,jdbcType=DECIMAL},
      </if>
      <if test="amount != null">
        AMOUNT = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="orderNo != null">
        ORDER_NO = #{orderNo,jdbcType=INTEGER},
      </if>
    </set>
    where CONTRACT_PRODUCT_ID = #{contractProductId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xt.domain.ContractProduct">
    update contract_product_c
    set CONTRACT_ID = #{contractId,jdbcType=VARCHAR},
      FACTORY_ID = #{factoryId,jdbcType=VARCHAR},
      FACTORY_NAME = #{factoryName,jdbcType=VARCHAR},
      PRODUCT_NO = #{productNo,jdbcType=VARCHAR},
      PRODUCT_IMAGE = #{productImage,jdbcType=VARCHAR},
      PRODUCT_DESC = #{productDesc,jdbcType=VARCHAR},
      LOADING_RATE = #{loadingRate,jdbcType=VARCHAR},
      BOX_NUM = #{boxNum,jdbcType=INTEGER},
      PACKING_UNIT = #{packingUnit,jdbcType=VARCHAR},
      CNUMBER = #{cnumber,jdbcType=INTEGER},
      OUT_NUMBER = #{outNumber,jdbcType=INTEGER},
      FINISHED = #{finished,jdbcType=INTEGER},
      PRODUCT_REQUEST = #{productRequest,jdbcType=VARCHAR},
      PRICE = #{price,jdbcType=DECIMAL},
      AMOUNT = #{amount,jdbcType=DECIMAL},
      ORDER_NO = #{orderNo,jdbcType=INTEGER}
    where CONTRACT_PRODUCT_ID = #{contractProductId,jdbcType=VARCHAR}
  </update>
</mapper>