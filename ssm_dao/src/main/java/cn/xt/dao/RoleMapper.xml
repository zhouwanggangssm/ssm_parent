<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xt.dao.RoleMapper">


  <resultMap id="roleMap1" type="Role">
    <id column="ROLE_ID" property="roleId" />
    <result column="NAME" property="name" />
    <result column="REMARK" property="remark" />
    <result column="ORDER_NO" property="orderNo" />
    <result column="CREATE_BY" property="createBy" />
    <result column="CREATE_DEPT" property="createDept" />
    <result column="CREATE_TIME" property="createTime" />
    <result column="UPDATE_BY" property="updateBy" />
    <result column="UPDATE_TIME" property="updateTime" />
    <collection property="users" ofType="User">
      <id column="USER_ID" property="userId"></id>
      <result column="USER_NAME" property="userName"></result>
    </collection>
  </resultMap>
  <select id="findRoleList" resultMap="roleMap1">
    select * from role_p
  </select>



<select id="findRolePage" resultType="Role">
  select * from role_p
</select>



<select id="RoleCount" resultType="int">
  select count(1) as count from role_p
</select>


 <select id="findRoleById" resultType="Role">
   select * from role_p
   <where>
     <if test="roleId!=null">ROLE_ID=#{roleId}</if>
   </where>
 </select>



  <insert id="addRole" parameterType="Role">
    insert into
    role_p(ROLE_ID,NAME,REMARK,ORDER_NO,CREATE_BY,CREATE_DEPT,CREATE_TIME,UPDATE_TIME)
    values(#{roleId},#{name},#{remark},#{orderNo},#{createBy},#{createDept},#{createTime},#{updateTime})
  </insert>



  <update id="updateRole" parameterType="Role">
    update role_p
    <set>
      <if test="name!=null">NAME=#{name},</if>
      <if test="remark!=null">REMARK=#{remark},</if>
      <if test="updateBy!=null">UPDATE_BY=#{updateBy},</if>
      <if test="updateTime!=null">UPDATE_TIME=#{updateTime}</if>
    </set>
    where ROLE_ID=#{roleId}
  </update>


  <delete id="deleteRole">
    delete from role_p
    <where>
      <if test="roleId!=null">ROLE_ID=#{roleId}</if>
    </where>
  </delete>


  <delete id="deleteRoleList" parameterType="java.util.List">
    delete from role_p where 1>2
    or ROLE_ID in
    <foreach collection="roleIds" item="roleId" open="(" close=")" separator=",">
      #{roleId}
    </foreach>
  </delete>

  <delete id="deleteRoleUserroleId">
    delete from  role_user_p
    <where>
        <if test="roleId!=null">ROLE_ID=#{roleId}</if>
    </where>
  </delete>

  <delete id="deleteRoleModuleroleId">
      delete from  role_module_p
      <where>
          <if test="roleId!=null">ROLE_ID=#{roleId}</if>
      </where>
  </delete>



  <delete id="deleteRoleUserroleIdList" parameterType="java.util.List">
      delete from role_user_p where 1>2
      or ROLE_ID in
    <foreach collection="roleIds" item="roleId" open="(" close=")" separator=",">
      #{roleId}
    </foreach>
  </delete>


  <delete id="deleteRoleModuleroleIdList" parameterType="java.util.List">
      delete from role_module_p where 1>2
      or ROLE_ID in
    <foreach collection="roleIds" item="roleId" open="(" close=")" separator=",">
      #{roleId}
    </foreach>
  </delete>


  <insert id="addRoleModule" parameterType="map">
    insert into role_module_p(MODULE_ID,ROLE_ID)
    values
    <foreach collection="moduleIds" item="moduleId"  separator=",">
      (#{moduleId},#{roleId})
    </foreach>
  </insert>














































  <resultMap id="BaseResultMap" type="cn.xt.domain.Role">
    <id column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="ORDER_NO" jdbcType="INTEGER" property="orderNo" />
    <result column="CREATE_BY" jdbcType="VARCHAR" property="createBy" />
    <result column="CREATE_DEPT" jdbcType="VARCHAR" property="createDept" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_BY" jdbcType="VARCHAR" property="updateBy" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ROLE_ID, NAME, REMARK, ORDER_NO, CREATE_BY, CREATE_DEPT, CREATE_TIME, UPDATE_BY, 
    UPDATE_TIME
  </sql>
  <select id="selectByExample" parameterType="cn.xt.domain.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role_p
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_p
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from role_p
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xt.domain.RoleExample">
    delete from role_p
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.xt.domain.Role">
    insert into role_p (ROLE_ID, NAME, REMARK, 
      ORDER_NO, CREATE_BY, CREATE_DEPT, 
      CREATE_TIME, UPDATE_BY, UPDATE_TIME
      )
    values (#{roleId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{orderNo,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR}, #{createDept,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.xt.domain.Role">
    insert into role_p
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="orderNo != null">
        ORDER_NO,
      </if>
      <if test="createBy != null">
        CREATE_BY,
      </if>
      <if test="createDept != null">
        CREATE_DEPT,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateBy != null">
        UPDATE_BY,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDept != null">
        #{createDept,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xt.domain.RoleExample" resultType="java.lang.Long">
    select count(*) from role_p
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role_p
    <set>
      <if test="record.roleId != null">
        ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null">
        ORDER_NO = #{record.orderNo,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null">
        CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDept != null">
        CREATE_DEPT = #{record.createDept,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role_p
    set ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      ORDER_NO = #{record.orderNo,jdbcType=INTEGER},
      CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
      CREATE_DEPT = #{record.createDept,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xt.domain.Role">
    update role_p
    <set>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        ORDER_NO = #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDept != null">
        CREATE_DEPT = #{createDept,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xt.domain.Role">
    update role_p
    set NAME = #{name,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      ORDER_NO = #{orderNo,jdbcType=INTEGER},
      CREATE_BY = #{createBy,jdbcType=VARCHAR},
      CREATE_DEPT = #{createDept,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </update>
</mapper>