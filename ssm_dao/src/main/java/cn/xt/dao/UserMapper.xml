<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xt.dao.UserMapper">

  <resultMap id="userMap1" type="User">
    <id column="USER_ID" property="userId"></id>
    <result column="USER_NAME" property="userName" />
    <result column="PASSWORD" property="password" />
    <result column="STATE" property="state" />
    <result column="CREATE_BY" property="createBy" />
    <result column="CREATE_DEPT" property="createDept" />
    <result column="CREATE_TIME" property="createTime" />
    <result column="UPDATE_BY" property="updateBy" />
    <result column="UPDATE_TIME" property="updateTime" />
    <association column="DEPT_ID" property="dept" javaType="Dept">
        <id column="DEPT_ID" property="deptId"></id>
        <result column="DEPT_NAME" property="deptName"></result>
    </association>
  </resultMap>
  <select id="findUserPage" resultMap="userMap1">
      select u.*,d.* from user_p u inner join dept_p d on u.DEPT_ID=d.DEPT_ID limit #{currentPageNo},#{pageSize}
  </select>


  <select id="getUserCount" resultType="int">
     select count(1) from user_p u inner join dept_p d on u.DEPT_ID=d.DEPT_ID
  </select>

  <resultMap id="userMap2" type="User">
    <id column="USER_ID" property="userId"></id>
    <result column="USER_NAME" property="userName" />
    <result column="PASSWORD" property="password" />
    <result column="STATE" property="state" />
    <result column="CREATE_BY" property="createBy" />
    <result column="CREATE_DEPT" property="createDept" />
    <result column="CREATE_TIME" property="createTime" />
    <result column="UPDATE_BY" property="updateBy" />
    <result column="UPDATE_TIME" property="updateTime" />
    <association column="DEPT_ID" property="dept" javaType="Dept">
      <id column="DEPT_ID" property="deptId"></id>
      <result column="DEPT_NAME" property="deptName"></result>
    </association>
  </resultMap>
  <select id="getUserById" resultMap="userMap2">
      select d.DEPT_ID,d.DEPT_NAME,u.USER_NAME,u.STATE from user_p u inner join dept_p d on u.DEPT_ID=d.DEPT_ID
      <where>
        <if test="userId!=null">u.USER_ID=#{userId}</if>
      </where>
  </select>
  
  <!--<resultMap id="userMap2" type="User">
    <result column="USER_NAME" property="userName" />
    <result column="PASSWORD" property="password" />
    <result column="STATE" property="state" />
    <result column="CREATE_BY" property="createBy" />
    <result column="CREATE_DEPT" property="createDept" />
    <result column="CREATE_TIME" property="createTime" />
    <result column="UPDATE_BY" property="updateBy" />
    <result column="UPDATE_TIME" property="updateTime" />
    <association column="USER_ID" property="userInfoId" javaType="UserInfo">
      <id column="USER_INFO_ID" property="userInfoId"></id>
      <result column="NAME" property="name"></result>
    </association>
  </resultMap>-->


  <select id="getUpmanager" resultType="UserInfo">
      select * from user_info_p
  </select>


<insert id="addUser" parameterType="User" useGeneratedKeys="true" keyProperty="USER_ID">
  insert into
  user_p(USER_ID,DEPT_ID,USER_NAME,PASSWORD,STATE,CREATE_BY,CREATE_DEPT,CREATE_TIME,UPDATE_TIME)
  values
  (#{userId},#{dept.deptId},#{userName},#{password},#{state},#{createBy},#{createDept},#{createTime},#{updateTime})
</insert>


<insert id="addUserInfo" parameterType="UserInfo">
  insert into user_info_p(
  USER_INFO_ID,NAME,MANAGER_ID,JOIN_DATE,SALARY,DEGREE,GENDER,
  STATION,TELEPHONE,BIRTHDAY,ORDER_NO,REMARK,CREATE_BY,CREATE_DEPT,CREATE_TIME,UPDATE_TIME
  )
  values
  (#{userInfoId},#{name},#{manager.userId},#{joinDate},#{salary},
  #{degree},#{gender},#{station},#{telephone},
  #{birthday},#{orderNo},#{remark},#{createBy},#{createDept},#{createTime},#{updateTime})
</insert>



<delete id="deleteUser">
  delete from user_p where USER_ID=#{userId}
</delete>


<delete id="deleteUserList" parameterType="java.util.List">
  delete from user_p where 1>2
  or USER_ID in
  <foreach collection="userIds" item="userId" open="(" close=")" separator=",">
    #{userId}
  </foreach>
</delete>


<delete id="deleteUserInfoById">
  delete from user_info_p
  <where>
    <if test="userId!=null">USER_INFO_ID=#{userId}</if>
  </where>
</delete>


<delete id="deleteUserInfoList" parameterType="java.util.List">
  delete from user_info_p where 1>2
  or USER_INFO_ID in
  <foreach collection="userIds" item="userId" open="(" close=")" separator=",">
    #{userId}
  </foreach>
</delete>


<delete id="deleteUserRoleById">
  delete from role_user_p
  <where>
    <if test="userId!=null">USER_ID=#{userId}</if>
  </where>
</delete>


<delete id="deleteUserRoleByIdList" parameterType="java.util.List">
  delete from role_user_p where 1>2
  or USER_ID in
  <foreach collection="userIds" item="userId" open="(" close=")" separator=",">
    #{userId}
  </foreach>
</delete>


 <select id="findByIdRole" resultType="Role">
   select * from role_user_p
   <where>
     <if test="userId!=null">USER_ID=#{userId}</if>
   </where>
 </select>


  <select id="findByIdUserInfo" resultType="UserInfo">
    select * from user_info_p
    <where>
      <if test="userId!=null">USER_INFO_ID=#{userId}</if>
    </where>
  </select>


<update id="updateUser" parameterType="User">
  update user_p
  <set>
    <if test="dept.deptId!=null">DEPT_ID=#{dept.deptId},</if>
    <if test="userName!=null">USER_NAME=#{userName},</if>
    <if test="state!=null">STATE=#{state},</if>
    <if test="updateBy!=null">UPDATE_BY=#{updateBy},</if>
    <if test="updateTime!=null">UPDATE_TIME=#{updateTime}</if>
  </set>
  where USER_ID=#{userId}
</update>




  <insert id="addRoleUser" parameterType="map">
    insert into role_user_p(ROLE_ID,USER_ID)
    values
    <foreach collection="roleIds" item="roleId" separator=",">
        (#{roleId},#{userId})
    </foreach>
  </insert>


    <!--<resultMap id="loginMap1" type="User">-->
        <!--<id column="USER_ID" property="userId"></id>-->
        <!--<result column="USER_NAME" property="userName" />-->
        <!--<result column="PASSWORD" property="password" />-->
        <!--<result column="STATE" property="state" />-->
        <!--<result column="CREATE_BY" property="createBy" />-->
        <!--<result column="CREATE_DEPT" property="createDept" />-->
        <!--<result column="CREATE_TIME" property="createTime" />-->
        <!--<result column="UPDATE_BY" property="updateBy" />-->
        <!--<result column="UPDATE_TIME" property="updateTime" />-->
        <!--<association column="DEPT_ID" property="dept" javaType="Dept">-->
            <!--<result column="bumen" property="deptName"></result>-->
        <!--</association>-->
        <!--<collection property="userInfo" ofType="UserInfo">-->
            <!--<result column="xingming" property="name"></result>-->
        <!--</collection>-->
    <!--</resultMap>-->
  <!--<select id="Userlogin" resultMap="loginMap1">-->
      <!--select u_p.*,u_i_p.NAME xingming,d_p.DEPT_NAME bumen from user_p u_p inner join user_info_p u_i_p on u_p.USER_ID = u_i_p.USER_INFO_ID-->
      <!--inner join dept_p d_p on u_p.DEPT_ID=d_p.DEPT_ID-->
    <!--<where>-->
      <!--<if test="username!=null">USER_NAME=#{username}</if>-->
      <!--<if test="password!=null">and PASSWORD=#{password}</if>-->
    <!--</where>-->
  <!--</select>-->


  <resultMap id="loginMap" type="User">
    <id column="USER_ID" property="userId"></id>
    <result column="USER_NAME" property="userName" />
    <result column="PASSWORD" property="password" />
    <result column="STATE" property="state" />
    <result column="CREATE_BY" property="createBy" />
    <result column="CREATE_DEPT" property="createDept" />
    <result column="CREATE_TIME" property="createTime" />
    <result column="UPDATE_BY" property="updateBy" />
    <result column="UPDATE_TIME" property="updateTime" />
    <association column="DEPT_ID" property="dept" javaType="Dept">
      <result column="bumen" property="deptName"></result>
    </association>
    <collection property="userInfo" ofType="UserInfo">
      <result column="xingming" property="name"></result>
    </collection>
  </resultMap>
  <select id="UserExist" resultMap="loginMap">
    select u_p.*,u_i_p.NAME xingming,d_p.DEPT_NAME bumen from user_p u_p inner join user_info_p u_i_p on u_p.USER_ID = u_i_p.USER_INFO_ID
    inner join dept_p d_p on u_p.DEPT_ID=d_p.DEPT_ID
      <where>
          <if test="username!=null">u_p.USER_NAME=#{username}</if>
      </where>
  </select>




  <select id="findUserRoleusername" resultType="Role">
    select r_p.NAME name from role_user_p r_u_p
inner join user_p u_p on r_u_p.USER_ID=u_p.USER_ID
inner join  role_p r_p on r_u_p.ROLE_ID=r_p.ROLE_ID
where u_p.USER_NAME=#{username}
  </select>

  <select id="findRoleModulerolename" resultType="Module">
    select m_p.NAME from role_module_p r_m_p
inner join role_p r_p on r_m_p.ROLE_ID=r_p.ROLE_ID
inner join module_p m_p on r_m_p.MODULE_ID=m_p.MODULE_ID
where r_p.NAME=#{rolename}
  </select>
























</mapper>